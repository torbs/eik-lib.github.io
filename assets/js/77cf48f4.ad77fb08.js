(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{123:function(e,a,t){"use strict";t.d(a,"a",(function(){return m})),t.d(a,"b",(function(){return j}));var n=t(0),l=t.n(n);function i(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function b(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){i(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function p(e,a){if(null==e)return{};var t,n,l=function(e,a){if(null==e)return{};var t,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(l[t]=e[t]);return l}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var c=l.a.createContext({}),o=function(e){var a=l.a.useContext(c),t=a;return e&&(t="function"==typeof e?e(a):b(b({},a),e)),t},m=function(e){var a=o(e.components);return l.a.createElement(c.Provider,{value:a},e.children)},s={inlineCode:"code",wrapper:function(e){var a=e.children;return l.a.createElement(l.a.Fragment,{},a)}},u=l.a.forwardRef((function(e,a){var t=e.components,n=e.mdxType,i=e.originalType,r=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=o(t),u=n,j=m["".concat(r,".").concat(u)]||m[u]||s[u]||i;return t?l.a.createElement(j,b(b({ref:a},c),{},{components:t})):l.a.createElement(j,b({ref:a},c))}));function j(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var i=t.length,r=new Array(i);r[0]=u;var b={};for(var p in a)hasOwnProperty.call(a,p)&&(b[p]=a[p]);b.originalType=e,b.mdxType="string"==typeof e?e:n,r[1]=b;for(var c=2;c<i;c++)r[c]=t[c];return l.a.createElement.apply(null,r)}return l.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},92:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return r})),t.d(a,"metadata",(function(){return b})),t.d(a,"toc",(function(){return p})),t.d(a,"default",(function(){return o}));var n=t(3),l=t(7),i=(t(0),t(123)),r={id:"server_rest_api",title:"Eik server - REST API",sidebar_label:"REST API"},b={unversionedId:"server_rest_api",id:"server_rest_api",isDocsHomePage:!1,title:"Eik server - REST API",description:"The EIK server has the following REST API:",source:"@site/docs/server_rest_api.md",slug:"/server_rest_api",permalink:"/docs/server_rest_api",version:"current",sidebar_label:"REST API",sidebar:"mainSidebar",previous:{title:"Eik server - Sink",permalink:"/docs/server_sink"},next:{title:"Eik server - File structure",permalink:"/docs/server_file_structure"}},p=[{value:"Authentication",id:"authentication",children:[{value:"Endpoint Summary Table",id:"endpoint-summary-table",children:[]},{value:"Login",id:"login",children:[]}]},{value:"Packages",id:"packages",children:[{value:"Endpoint Summary Table",id:"endpoint-summary-table-1",children:[]},{value:"Public Package URL",id:"public-package-url",children:[]},{value:"Upload a package",id:"upload-a-package",children:[]},{value:"Latest Package versions",id:"latest-package-versions",children:[]},{value:"Package version overview",id:"package-version-overview",children:[]}]},{value:"NPM Packages",id:"npm-packages",children:[{value:"Endpoint Summary Table",id:"endpoint-summary-table-2",children:[]},{value:"Public NPM Package URL",id:"public-npm-package-url",children:[]},{value:"Upload a NPM Package",id:"upload-a-npm-package",children:[]},{value:"Latest NPM Package versions",id:"latest-npm-package-versions",children:[]},{value:"NPM Package version overview",id:"npm-package-version-overview",children:[]}]},{value:"Import Maps",id:"import-maps",children:[{value:"Endpoint Summary Table",id:"endpoint-summary-table-3",children:[]},{value:"Public Import Maps URL",id:"public-import-maps-url",children:[]},{value:"Upload an Import Map",id:"upload-an-import-map",children:[]},{value:"Latest Import Map versions",id:"latest-import-map-versions",children:[]}]},{value:"Aliases",id:"aliases",children:[{value:"Endpoint Summary Table",id:"endpoint-summary-table-4",children:[]},{value:"Public Alias URL",id:"public-alias-url",children:[]},{value:"Create Alias",id:"create-alias",children:[]},{value:"Update Alias",id:"update-alias",children:[]},{value:"Delete Alias",id:"delete-alias",children:[]}]}],c={toc:p};function o(e){var a=e.components,t=Object(l.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},c,t,{components:a,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The EIK server has the following REST API:"),Object(i.b)("h2",{id:"authentication"},"Authentication"),Object(i.b)("p",null,"Authentication is needed to execute multiple API calls in the REST API."),Object(i.b)("h3",{id:"endpoint-summary-table"},"Endpoint Summary Table"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"),Object(i.b)("th",{parentName:"tr",align:null},"Verb"),Object(i.b)("th",{parentName:"tr",align:null},"Endpoint"),Object(i.b)("th",{parentName:"tr",align:null},"Form Fields"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{parentName:"td",href:"#login"},"Login")),Object(i.b)("td",{parentName:"tr",align:null},"POST"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"/auth/login")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"key"))))),Object(i.b)("h3",{id:"login"},"Login"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Method:")," ",Object(i.b)("inlineCode",{parentName:"p"},"POST")),Object(i.b)("p",null,"Logs a user in to the service."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/auth/login\n")),Object(i.b)("p",null,"Form parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"key")," an authentication key")),Object(i.b)("p",null,"Status codes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"200")," if user is authorized"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"401")," if user is not authorized")),Object(i.b)("p",null,"Success response: A jwt token"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n    "token": "..."\n}\n')),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"curl -X POST -i -F key=rfm940c3 http://localhost:4001/auth/login\n")),Object(i.b)("h2",{id:"packages"},"Packages"),Object(i.b)("p",null,"A packages is a set of files (javascript, css etc) that is intended to be referenced from an HTML document and\nloaded by a browser."),Object(i.b)("p",null,"Packages are versioned and consist of one or more files. A package of a specific version is immutable."),Object(i.b)("h3",{id:"endpoint-summary-table-1"},"Endpoint Summary Table"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"),Object(i.b)("th",{parentName:"tr",align:null},"Verb"),Object(i.b)("th",{parentName:"tr",align:null},"Endpoint"),Object(i.b)("th",{parentName:"tr",align:null},"Form Fields"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{parentName:"td",href:"#public-package-url"},"Public Package URL")),Object(i.b)("td",{parentName:"tr",align:null},"GET"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"/pkg/:name/:version/:extras")),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{parentName:"td",href:"#upload-a-package"},"Upload a Package")),Object(i.b)("td",{parentName:"tr",align:null},"PUT"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"/pkg/:name/:version")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"package"))))),Object(i.b)("h3",{id:"public-package-url"},"Public Package URL"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Method:")," ",Object(i.b)("inlineCode",{parentName:"p"},"GET")),Object(i.b)("p",null,"Retrieves files from a package on the service."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/pkg/:name/:version/:extras\n")),Object(i.b)("p",null,"URL parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":name")," is the name of the package. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":version")," is the version of the package. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":extras")," whildcard pathname to any file in the package")),Object(i.b)("p",null,"Status codes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"200")," if file is successfully retrieved"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"404")," if file is not found")),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://localhost:4001/pkg/fuzz/8.4.1/main/index.js\n")),Object(i.b)("h3",{id:"upload-a-package"},"Upload a package"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Method:")," ",Object(i.b)("inlineCode",{parentName:"p"},"PUT")),Object(i.b)("p",null,"Puts a new package at the service."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/pkg/:name/:version\n")),Object(i.b)("p",null,"URL parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":name")," is the name of the package. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":version")," is the version of the package. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),".")),Object(i.b)("p",null,"Form parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"package")," a ",Object(i.b)("inlineCode",{parentName:"li"},"tar")," or ",Object(i.b)("inlineCode",{parentName:"li"},"tar.gz")," containing the files of the package")),Object(i.b)("p",null,"HTTP headers:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Authorization")," a jwt authorization bearer with the token retrieved from a successful ",Object(i.b)("a",{parentName:"li",href:"#login"},"authentication"))),Object(i.b)("p",null,"Status codes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"303")," if package is successfully uploaded. ",Object(i.b)("inlineCode",{parentName:"li"},"location")," is root of module"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"400")," if validation in URL parameters or form fields fails"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"401")," if user is not authorized"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"409")," if package already exists or version in a major range is not newer than previous version in a major range"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"413")," if package is too large"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"415")," if file format of the uploaded file is unsupported"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"422")," if a entry in the uploaded file could not be parsed or errored"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"502")," if package could not be written to the sink")),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},'curl -X PUT -i -F package=@archive.tgz -H "Authorization: Bearer {:token}" http://localhost:4001/pkg/fuzz/8.4.1\n')),Object(i.b)("h3",{id:"latest-package-versions"},"Latest Package versions"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Method:")," ",Object(i.b)("inlineCode",{parentName:"p"},"GET")),Object(i.b)("p",null,"Retrieves an overview of the latest major versions of a package."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/pkg/:name\n")),Object(i.b)("p",null,"URL parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":name")," is the name of the package. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),".")),Object(i.b)("p",null,"Status codes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"200")," if file is successfully retrieved"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"404")," if file is not found")),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://localhost:4001/pkg/fuzz\n")),Object(i.b)("h3",{id:"package-version-overview"},"Package version overview"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Method:")," ",Object(i.b)("inlineCode",{parentName:"p"},"GET")),Object(i.b)("p",null,"Retrieves an overview of the files of a package version."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/pkg/:name/:version\n")),Object(i.b)("p",null,"URL parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":name")," is the name of the package. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":version")," is the version of the package. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),".")),Object(i.b)("p",null,"Status codes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"200")," if file is successfully retrieved"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"404")," if file is not found")),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://localhost:4001/pkg/fuzz\n")),Object(i.b)("h2",{id:"npm-packages"},"NPM Packages"),Object(i.b)("p",null,"An NPM package is a local replica of a package found in the ",Object(i.b)("a",{parentName:"p",href:"https://www.npmjs.com/"},"NPM registry")," intended to be referenced from an HTML document and\nloaded by a browser. In most cases, with some exceptions, an NPM Package will be a library or utillity that other ",Object(i.b)("a",{parentName:"p",href:"#packages"},"Packages")," depend upon."),Object(i.b)("p",null,"NPM Packages are versioned and consist of one or more files. An NPM package of a specific version is immutable."),Object(i.b)("h3",{id:"endpoint-summary-table-2"},"Endpoint Summary Table"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"),Object(i.b)("th",{parentName:"tr",align:null},"Verb"),Object(i.b)("th",{parentName:"tr",align:null},"Endpoint"),Object(i.b)("th",{parentName:"tr",align:null},"Form Fields"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{parentName:"td",href:"#public-npm-package-url"},"Public NPM Package URL")),Object(i.b)("td",{parentName:"tr",align:null},"GET"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"/npm/:name/:version/:extras")),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{parentName:"td",href:"#upload-a-npm-package"},"Upload an NPM Package")),Object(i.b)("td",{parentName:"tr",align:null},"PUT"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"/npm/:name/:version")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"package"))))),Object(i.b)("h3",{id:"public-npm-package-url"},"Public NPM Package URL"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Method:")," ",Object(i.b)("inlineCode",{parentName:"p"},"GET")),Object(i.b)("p",null,"Retrieves files from an NPM package on the service."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/npm/:name/:version/:extras\n")),Object(i.b)("p",null,"URL parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":name")," is the name of the NPM package. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":version")," is the version of the NPM package. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":extras")," wildcard pathname to any file in the NPM package")),Object(i.b)("p",null,"Status codes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"200")," if file is successfully retrieved"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"404")," if file is not found")),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://localhost:4001/npm/fuzz/8.4.1/main/index.js\n")),Object(i.b)("h3",{id:"upload-a-npm-package"},"Upload a NPM Package"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Method:")," ",Object(i.b)("inlineCode",{parentName:"p"},"PUT")),Object(i.b)("p",null,"Puts a new NPM package on the service."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/npm/:name/:version\n")),Object(i.b)("p",null,"URL parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":name")," is the name of the NPM package. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":version")," is the version of the NPM package. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),".")),Object(i.b)("p",null,"Form parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"package")," a ",Object(i.b)("inlineCode",{parentName:"li"},"tar")," or ",Object(i.b)("inlineCode",{parentName:"li"},"tar.gz")," containing the files of the NPM package")),Object(i.b)("p",null,"HTTP headers:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Authorization")," a JWT authorization bearer with the token retrieved from a successful ",Object(i.b)("a",{parentName:"li",href:"#login"},"authentication"))),Object(i.b)("p",null,"Status codes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"303")," if NPM package is successfully uploaded. ",Object(i.b)("inlineCode",{parentName:"li"},"location")," is root of module"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"400")," if validation in URL parameters or form fields fails"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"401")," if user is not authorized"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"409")," if NPM package already exist or version in a major range is not newer than previous version in a major range"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"413")," if package is too large"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"415")," if file format of the uploaded file is unsupported"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"422")," if a entry in the uploaded file could not be parsed or errored"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"502")," if NPM package could not be written to the sink")),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},'curl -X PUT -i -F package=@archive.tgz -H "Authorization: Bearer {:token}" http://localhost:4001/npm/fuzz/8.4.1\n')),Object(i.b)("h3",{id:"latest-npm-package-versions"},"Latest NPM Package versions"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Method:")," ",Object(i.b)("inlineCode",{parentName:"p"},"GET")),Object(i.b)("p",null,"Retrieves an overview of the latest major versions of an NPM package."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/npm/:name\n")),Object(i.b)("p",null,"URL parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":name")," is the name of the NPM package. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),".")),Object(i.b)("p",null,"Status codes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"200")," if file is successfully retrieved"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"404")," if file is not found")),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://localhost:4001/npm/fuzz\n")),Object(i.b)("h3",{id:"npm-package-version-overview"},"NPM Package version overview"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Method:")," ",Object(i.b)("inlineCode",{parentName:"p"},"GET")),Object(i.b)("p",null,"Retrieves an overview of the files of an NPM package version."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/npm/:name/:version\n")),Object(i.b)("p",null,"URL parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":name")," is the name of the NPM package. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":version")," is the version of the NPM package. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),".")),Object(i.b)("p",null,"Status codes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"200")," if file is successfully retrieved"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"404")," if file is not found")),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://localhost:4001/npm/fuzz\n")),Object(i.b)("h2",{id:"import-maps"},"Import Maps"),Object(i.b)("p",null,"An ",Object(i.b)("a",{parentName:"p",href:"https://github.com/WICG/import-maps"},"import map")," holds a mapping or a set of mappings between ECMA Script Module (ESM) bare imports and an absolute URL.\nImport maps are versioned and are immutable."),Object(i.b)("h3",{id:"endpoint-summary-table-3"},"Endpoint Summary Table"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"),Object(i.b)("th",{parentName:"tr",align:null},"Verb"),Object(i.b)("th",{parentName:"tr",align:null},"Endpoint"),Object(i.b)("th",{parentName:"tr",align:null},"Form Fields"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{parentName:"td",href:"#public-import-map-url"},"Public Import Map URL")),Object(i.b)("td",{parentName:"tr",align:null},"GET"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"/map/:name/:version")),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{parentName:"td",href:"#upload-an-import-map"},"Upload an Import Map")),Object(i.b)("td",{parentName:"tr",align:null},"PUT"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"/map/:name/:version")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"map"))))),Object(i.b)("h3",{id:"public-import-maps-url"},"Public Import Maps URL"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Method:")," ",Object(i.b)("inlineCode",{parentName:"p"},"GET")),Object(i.b)("p",null,"Retrieves an import map from the service."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/map/:name/:version\n")),Object(i.b)("p",null,"URL parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":name")," is the name of the import map. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":version")," is the version of the import map. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),".")),Object(i.b)("p",null,"Status codes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"200")," if import map is successfully retrieved"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"404")," if import map is not found")),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://localhost:4001/map/buzz/8.4.1\n")),Object(i.b)("h3",{id:"upload-an-import-map"},"Upload an Import Map"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Method:")," ",Object(i.b)("inlineCode",{parentName:"p"},"PUT")),Object(i.b)("p",null,"Puts a new import map at the service."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/map/:name/:version\n")),Object(i.b)("p",null,"URL parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":name")," is the name of the import map. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":version")," is the version of the import map. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),".")),Object(i.b)("p",null,"Form parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"map")," a ",Object(i.b)("inlineCode",{parentName:"li"},"json")," file (the import map)")),Object(i.b)("p",null,"HTTP headers:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Authorization")," a jwt authorization bearer with the token retrieved from a successful ",Object(i.b)("a",{parentName:"li",href:"#login"},"authentication"))),Object(i.b)("p",null,"Status codes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"303")," if import map is successfully uploaded. ",Object(i.b)("inlineCode",{parentName:"li"},"location")," is ",Object(i.b)("a",{parentName:"li",href:"#public-import-map-url"},"Public Import Map URL")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"400")," if validation in URL parameters or form fields fails"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"401")," if user is not authorized"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"409")," if import map already exist"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"415")," if file format of the uploaded import map is unsupported"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"502")," if import map could not be written to the sink")),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},'curl -X PUT -i -F map=@import-map.json -H "Authorization: Bearer {:token}" http://localhost:4001/map/buzz/8.4.1\n')),Object(i.b)("h3",{id:"latest-import-map-versions"},"Latest Import Map versions"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Method:")," ",Object(i.b)("inlineCode",{parentName:"p"},"GET")),Object(i.b)("p",null,"Retrieves an overview of the latest versions of a Import Map."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/map/:name\n")),Object(i.b)("p",null,"URL parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":name")," is the name of the import map. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),".")),Object(i.b)("p",null,"Status codes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"200")," if file is successfully retrieved"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"404")," if file is not found")),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://localhost:4001/map/buzz\n")),Object(i.b)("h2",{id:"aliases"},"Aliases"),Object(i.b)("p",null,"An alias is a shorthand between a major version of a package / import map and the set exact version of the package / import map."),Object(i.b)("h3",{id:"endpoint-summary-table-4"},"Endpoint Summary Table"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"),Object(i.b)("th",{parentName:"tr",align:null},"Verb"),Object(i.b)("th",{parentName:"tr",align:null},"Endpoint"),Object(i.b)("th",{parentName:"tr",align:null},"Form Fields"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{parentName:"td",href:"#public-alias-url"},"Public Alias URL")),Object(i.b)("td",{parentName:"tr",align:null},"GET"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"/:type/:name/v:alias/:extras")),Object(i.b)("td",{parentName:"tr",align:null})),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{parentName:"td",href:"#create-alias"},"Create Alias")),Object(i.b)("td",{parentName:"tr",align:null},"PUT"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"/:type/:name/v:alias")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"version"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{parentName:"td",href:"#update-alias"},"Update Alias")),Object(i.b)("td",{parentName:"tr",align:null},"POST"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"/:type/:name/v:alias")),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"version"))),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("a",{parentName:"td",href:"#delete-alias"},"Delete Alias")),Object(i.b)("td",{parentName:"tr",align:null},"DELETE"),Object(i.b)("td",{parentName:"tr",align:null},Object(i.b)("inlineCode",{parentName:"td"},"/:type/:name/v:alias")),Object(i.b)("td",{parentName:"tr",align:null})))),Object(i.b)("h3",{id:"public-alias-url"},"Public Alias URL"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Method:")," ",Object(i.b)("inlineCode",{parentName:"p"},"GET")),Object(i.b)("p",null,"Retrieves files from a package or an import map at the service."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/:type/:name/v:alias/:extras\n")),Object(i.b)("p",null,"URL parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":type")," is the type to retrieve from. Validator: ",Object(i.b)("inlineCode",{parentName:"li"},"pkg"),", ",Object(i.b)("inlineCode",{parentName:"li"},"npm")," or ",Object(i.b)("inlineCode",{parentName:"li"},"map"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":name")," is the name of the package / import map. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":alias")," is the major version of the package / import map. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":extras")," whildcard pathname to any file in a package. Does not apply to import maps.")),Object(i.b)("p",null,"Status codes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"302")," if alias exist"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"404")," if alias is not found")),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"curl -X GET -L http://localhost:4001/pkg/fuzz/v8/main/index.js\ncurl -X GET -L http://localhost:4001/map/buzz/v4\n")),Object(i.b)("h3",{id:"create-alias"},"Create Alias"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Method:")," ",Object(i.b)("inlineCode",{parentName:"p"},"PUT")),Object(i.b)("p",null,"Create a new alias."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/:type/:name/v:alias\n")),Object(i.b)("p",null,"URL parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":type")," is the type to retrieve from. Validator: ",Object(i.b)("inlineCode",{parentName:"li"},"pkg"),", ",Object(i.b)("inlineCode",{parentName:"li"},"npm")," or ",Object(i.b)("inlineCode",{parentName:"li"},"map"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":name")," is the name of the package / import map. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":alias")," is the major version of the package / import map. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),".")),Object(i.b)("p",null,"Form parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":version")," full version of the package to be aliased")),Object(i.b)("p",null,"HTTP headers:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Authorization")," a jwt authorization bearer with the token retrieved from a successful ",Object(i.b)("a",{parentName:"li",href:"#login"},"authentication"))),Object(i.b)("p",null,"Status codes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"303")," if alias is successfully created. ",Object(i.b)("inlineCode",{parentName:"li"},"location")," points to the alias"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"400")," if validation in URL parameters or form fields fails"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"401")," if user is not authorized"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"409")," if alias already exist"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"502")," if alias could not be altered by the sink")),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},'curl -X PUT -i -F version=8.4.1 -H "Authorization: Bearer {:token}" http://localhost:4001/pkg/fuzz/v8\ncurl -X PUT -i -F version=4.2.2 -H "Authorization: Bearer {:token}" http://localhost:4001/map/buzz/v4\n')),Object(i.b)("h3",{id:"update-alias"},"Update Alias"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Method:")," ",Object(i.b)("inlineCode",{parentName:"p"},"POST")),Object(i.b)("p",null,"Updates an existing alias."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/:type/:name/v:alias\n")),Object(i.b)("p",null,"URL parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":type")," is the type to retrieve from. Validator: ",Object(i.b)("inlineCode",{parentName:"li"},"pkg"),", ",Object(i.b)("inlineCode",{parentName:"li"},"npm")," or ",Object(i.b)("inlineCode",{parentName:"li"},"map"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":name")," is the name of the package / import map. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":alias")," is the major version of the package / import map. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),".")),Object(i.b)("p",null,"Form parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":version")," full version of the package to be aliased")),Object(i.b)("p",null,"HTTP headers:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Authorization")," a jwt authorization bearer with the token retrieved from a successful ",Object(i.b)("a",{parentName:"li",href:"#login"},"authentication"))),Object(i.b)("p",null,"Status codes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"303")," if alias is successfully created. ",Object(i.b)("inlineCode",{parentName:"li"},"location")," points to the alias"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"401")," if user is not authorized"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"404")," if alias does not exist"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"502")," if alias could not be altered by the sink")),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},'curl -X POST -i -F version=8.4.1 -H "Authorization: Bearer {:token}" http://localhost:4001/pkg/fuzz/v8\ncurl -X POST -i -F version=4.4.2 -H "Authorization: Bearer {:token}" http://localhost:4001/map/buzz/v4\n')),Object(i.b)("h3",{id:"delete-alias"},"Delete Alias"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Method:")," ",Object(i.b)("inlineCode",{parentName:"p"},"DELETE")),Object(i.b)("p",null,"Deletes an existing alias."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/:type/:name/v:alias\n")),Object(i.b)("p",null,"URL parameters:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":type")," is the type to retrieve from. Validator: ",Object(i.b)("inlineCode",{parentName:"li"},"pkg"),", ",Object(i.b)("inlineCode",{parentName:"li"},"npm")," or ",Object(i.b)("inlineCode",{parentName:"li"},"map"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":name")," is the name of the package / import map. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},":alias")," is the major version of the package / import map. Validator: Comply with ",Object(i.b)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),".")),Object(i.b)("p",null,"HTTP headers:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"Authorization")," a jwt authorization bearer with the token retrieved from a successful ",Object(i.b)("a",{parentName:"li",href:"#login"},"authentication"))),Object(i.b)("p",null,"Status codes:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"204")," if alias is successfully deleted"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"401")," if user is not authorized"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"404")," if alias does not exist"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"502")," if alias could not be altered by the sink")),Object(i.b)("p",null,"Example:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},'curl -X DELETE -H "Authorization: Bearer {:token}" http://localhost:4001/pkg/fuzz/v8\ncurl -X DELETE -H "Authorization: Bearer {:token}" http://localhost:4001/map/buzz/v4\n')))}o.isMDXComponent=!0}}]);