(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{121:function(e,t,r){"use strict";r.d(t,"a",(function(){return b})),r.d(t,"b",(function(){return u}));var a=r(0),n=r.n(a);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=n.a.createContext({}),p=function(e){var t=n.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},b=function(e){var t=p(e.components);return n.a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=n.a.forwardRef((function(e,t){var r=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),b=p(r),d=a,u=b["".concat(c,".").concat(d)]||b[d]||m[d]||i;return r?n.a.createElement(u,s(s({ref:t},l),{},{components:r})):n.a.createElement(u,s({ref:t},l))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=r.length,c=new Array(i);c[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:a,c[1]=s;for(var l=2;l<i;l++)c[l]=r[l];return n.a.createElement.apply(null,c)}return n.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},84:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return s})),r.d(t,"toc",(function(){return o})),r.d(t,"default",(function(){return p}));var a=r(3),n=r(7),i=(r(0),r(121)),c={id:"server_metrics",title:"Eik server - Metrics",sidebar_label:"Metrics"},s={unversionedId:"server_metrics",id:"server_metrics",isDocsHomePage:!1,title:"Eik server - Metrics",description:"The Eik server exposes a metric stream which emits internal metrics",source:"@site/docs/server_metrics.md",slug:"/server_metrics",permalink:"/docs/server_metrics",version:"current",sidebar_label:"Metrics",sidebar:"mainSidebar",previous:{title:"Eik server - File structure",permalink:"/docs/server_file_structure"},next:{title:"CI Overview",permalink:"/docs/ci"}},o=[{value:"Usage",id:"usage",children:[]},{value:"Metrics",id:"metrics",children:[]}],l={toc:o};function p(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"The Eik server exposes a ",Object(i.b)("a",{parentName:"p",href:"https://github.com/metrics-js/client"},"metric stream")," which emits internal metrics\non the server. These metrics are intended to give numbers on how the server as an application is behaving and\nperforming and is an important tool in the toolbox for monitoring the servers health status. These metrics do\nnot provide statistics on assets uploaded to the asset server."),Object(i.b)("p",null,"The metrics the server provides are not bound to any particular metric system so it's possible to provide the metrics to\nany monitoring system as preferred. The metric stream emits a set of generic metric objects that can be altered and\npiped as desired."),Object(i.b)("p",null,"Please see ",Object(i.b)("a",{parentName:"p",href:"https://github.com/metrics-js/client"},"@metrics/client")," for examples of how to consume these metrics in\nyour preferred monitoring system."),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("p",null,"The ",Object(i.b)("inlineCode",{parentName:"p"},"@eik/service")," module exposes a ",Object(i.b)("inlineCode",{parentName:"p"},".metric")," property. This property holds a plain Node.js object stream which\nemits the metrics as objects on the stream."),Object(i.b)("p",null,"This stream can be piped into a metrics consumer or any other Node.js writable / transform stream for further\nprocessing."),Object(i.b)("p",null,"Example of metrics being piped into a prometheus consumer:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"const MetricsConsumer = require('@metrics/prometheus-consumer');\nconst prometheus = require('prom-client');\nconst Service = require('@eik/service');\nconst fastify = require('fastify');\n\nconst service = new Service();\n\nconst metricsConsumer = new MetricsConsumer({\n    client: prometheus,\n});\n\nservice.metrics.pipe(metricsConsumer);\n\nconst app = fastify();\napp.register(service.api());\n\napp.get('/_/metrics', (request, reply) => {\n    reply.type(metricsConsumer.registry.contentType);\n    reply.send(metricsConsumer.registry.metrics());\n});\n\nconst run = async () => {\n    await app.listen(8080, '0.0.0.0');\n}\nrun();\n")),Object(i.b)("h2",{id:"metrics"},"Metrics"),Object(i.b)("p",null,"Each metric provided by the server has a unique ",Object(i.b)("inlineCode",{parentName:"p"},"name")," and a ",Object(i.b)("inlineCode",{parentName:"p"},"type")," defining what type (counter, histogram, etc) of\nmetric it is."),Object(i.b)("p",null,"The server exposes these metrics:"),Object(i.b)("table",null,Object(i.b)("thead",{parentName:"table"},Object(i.b)("tr",{parentName:"thead"},Object(i.b)("th",{parentName:"tr",align:null},"Name"),Object(i.b)("th",{parentName:"tr",align:null},"Type"),Object(i.b)("th",{parentName:"tr",align:null},"Description"))),Object(i.b)("tbody",{parentName:"table"},Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"eik_core_auth_post_handler"),Object(i.b)("td",{parentName:"tr",align:null},"histogram"),Object(i.b)("td",{parentName:"tr",align:null},"Time taken in a ",Object(i.b)("a",{parentName:"td",href:"/docs/server_rest_api#login"},"login")," method")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"eik_core_pkg_get_handler"),Object(i.b)("td",{parentName:"tr",align:null},"histogram"),Object(i.b)("td",{parentName:"tr",align:null},"Time taken in a ",Object(i.b)("a",{parentName:"td",href:"/docs/server_rest_api#public-package-url"},"public package")," method")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"eik_core_pkg_log_handler"),Object(i.b)("td",{parentName:"tr",align:null},"histogram"),Object(i.b)("td",{parentName:"tr",align:null},"Time taken in a ",Object(i.b)("a",{parentName:"td",href:"/docs/server_rest_api#package-version-overview"},"package version overview")," method")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"eik_core_pkg_put_handler"),Object(i.b)("td",{parentName:"tr",align:null},"histogram"),Object(i.b)("td",{parentName:"tr",align:null},"Time taken in a ",Object(i.b)("a",{parentName:"td",href:"/docs/server_rest_api#upload-a-package"},"upload package")," method")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"eik_core_versions_get_handler"),Object(i.b)("td",{parentName:"tr",align:null},"histogram"),Object(i.b)("td",{parentName:"tr",align:null},"Time taken in a ",Object(i.b)("a",{parentName:"td",href:"/docs/server_rest_api#latest-package-versions"},"latest package versions")," method")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"eik_core_alias_get_handler"),Object(i.b)("td",{parentName:"tr",align:null},"histogram"),Object(i.b)("td",{parentName:"tr",align:null},"Time taken in a ",Object(i.b)("a",{parentName:"td",href:"/docs/server_rest_api#public-alias-url"},"public alias")," method")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"eik_core_alias_put_handler"),Object(i.b)("td",{parentName:"tr",align:null},"histogram"),Object(i.b)("td",{parentName:"tr",align:null},"Time taken in a ",Object(i.b)("a",{parentName:"td",href:"/docs/server_rest_api#create-alias"},"create alias")," method")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"eik_core_alias_post_handler"),Object(i.b)("td",{parentName:"tr",align:null},"histogram"),Object(i.b)("td",{parentName:"tr",align:null},"Time taken in a ",Object(i.b)("a",{parentName:"td",href:"/docs/server_rest_api#update-alias"},"update alias")," method")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"eik_core_alias_del_handler"),Object(i.b)("td",{parentName:"tr",align:null},"histogram"),Object(i.b)("td",{parentName:"tr",align:null},"Time taken in a ",Object(i.b)("a",{parentName:"td",href:"/docs/server_rest_api#delete-alias"},"delete alias")," method")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"eik_core_map_get_handler"),Object(i.b)("td",{parentName:"tr",align:null},"histogram"),Object(i.b)("td",{parentName:"tr",align:null},"Time taken in a ",Object(i.b)("a",{parentName:"td",href:"/docs/server_rest_api#public-import-maps-url"},"public import maps")," method")),Object(i.b)("tr",{parentName:"tbody"},Object(i.b)("td",{parentName:"tr",align:null},"eik_core_map_put_handler"),Object(i.b)("td",{parentName:"tr",align:null},"histogram"),Object(i.b)("td",{parentName:"tr",align:null},"Time taken in a ",Object(i.b)("a",{parentName:"td",href:"/docs/server_rest_api#upload-an-import-map"},"upload import maps")," method")))))}p.isMDXComponent=!0}}]);